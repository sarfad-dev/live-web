<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Locate CanSat</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@latest/dist/tailwind.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map {
            width: 100%;
            height: 50vh;
            border-radius: 10px;
        }
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
   
            color: white;
        }
        #container {
            width: 90%;
            max-width: 800px;
            margin: auto;
        }
        input {
            color: black;
        }
    </style>
</head>

<body class="bg-gray-900">
    <div id="container">
        <div id="passwordPrompt" class="text-center p-4 bg-gray-800 rounded-lg shadow-lg">
            <h2>Please enter the password:</h2>
            <input type="password" id="passwordInput" class="mb-4 p-2 w-4/5 border rounded-md" placeholder="Enter password" />
            <button id="passwordButton" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">Submit</button>
            <p id="errorText" class="text-red-500 mt-2"></p>
        </div>

        <div id="mainContent" class="hidden">
            <h1 class="text-3xl font-bold mb-3 text-center">SARFAD Locator</h1>
            <button id="locateButton" class="bg-green-500 text-white py-3 px-6 rounded-lg text-lg hover:bg-green-600 transition-all mx-auto block">
                Locate CanSat
            </button>
            <div id="mapContainer" class="hidden flex flex-col items-center justify-center mt-4">
                <div id="map"></div>
                <div class="flex flex-col items-center mt-4">
                    <button id="googleMapsButton" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600">
                        Open in Google Maps
                    </button>
                    <button id="mapyCzButton" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 mt-2">
                        Open in Mapy.cz
                    </button>
                </div>
                <div id="infoText" class="mt-4"></div>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-arrowheads/js/leaflet-arrowheads.min.js"></script>
    <script>
        const passwordInput = document.getElementById("passwordInput");
        const passwordButton = document.getElementById("passwordButton");
        const errorText = document.getElementById("errorText");
        const mainContent = document.getElementById("mainContent");

        const checkSession = () => {
            const sessionToken = document.cookie.replace(/(?:(?:^|.*;\s*)sessionToken\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            if (sessionToken) {
                document.getElementById("passwordPrompt").style.display = "none";
                mainContent.classList.remove("hidden");
            }
        };

        const setSessionToken = (token) => {
            document.cookie = `sessionToken=${token}; path=/; max-age=3600`;
        };

        window.onload = checkSession;

        passwordButton.addEventListener("click", async function () {
            const password = passwordInput.value;
            const response = await fetch(`/check-password?password=${password}`);
            const data = await response.json();

            if (data.authorized) {
                document.getElementById("passwordPrompt").style.display = "none";
                mainContent.classList.remove("hidden");
                setSessionToken(data.sessionToken);
            } else {
                errorText.innerHTML = "Incorrect password. Please try again.";
            }
        });

        const locateButton = document.getElementById("locateButton");
        const mapContainer = document.getElementById("mapContainer");
        const infoText = document.getElementById("infoText");
        const googleMapsButton = document.getElementById("googleMapsButton");
        const mapyCzButton = document.getElementById("mapyCzButton");
        let targetLat;
        let targetLng;

        locateButton.addEventListener("click", async function () {
            locateButton.disabled = true;
            navigator.geolocation.getCurrentPosition(
                async (position) => {
                    const userLat = position.coords.latitude;
                    const userLng = position.coords.longitude;
                    const response = await fetch("/latest-location");
                    const data = await response.json();
                    const { latitude, longitude } = data[0];
                    targetLat = parseFloat(data[0].latitude);
                    targetLng = parseFloat(data[0].longitude);

                    locateButton.style.display = "none";
                    mapContainer.classList.remove("hidden");
                    const map = L.map("map").setView([userLat, userLng], 13);
                    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                        attribution: "Map data Â© OpenStreetMap contributors",
                        maxZoom: 18,
                    }).addTo(map);
                    const userMarker = L.marker([userLat, userLng]).addTo(map).bindPopup("Your location").openPopup();
                    const targetMarker = L.marker([latitude, longitude]).addTo(map).bindPopup("Target location").openPopup();

                    const latLngs = [
                        [userLat, userLng],
                        [latitude, longitude],
                    ];
                    const polyline = L.polyline(latLngs, {
                        color: "blue",
                        weight: 3,
                    }).addTo(map);
                    map.fitBounds(polyline.getBounds());
                    const distance = map.distance(userMarker.getLatLng(), targetMarker.getLatLng());
                    const estimatedTime = distance / 1.4;
                    const angle = map.angle([userLat, userLng], [latitude, longitude]);
                    infoText.innerHTML = `
                      <p>You are ${distance.toFixed(2)} meters away from the target location.</p>
                      <p>Estimated time to reach the location: ${Math.ceil(estimatedTime / 60)} minutes.</p>
                      <p>Direction: <span style="display:inline-block; transform: rotate(${angle}deg);">&#x2795;</span></p>
                    `;
                    polyline.arrowheads({
                        size: "15%",
                        frequency: "end",
                        color: "red",
                    });

                    googleMapsButton.style.display = "inline-block";
                    mapyCzButton.style.display = "inline-block";
                },
                (error) => {
                    console.error("Error fetching user location:", error);
                    locateButton.disabled = false;
                }
            );
        });

        googleMapsButton.addEventListener("click", function () {
            const googleMapsUrl = `https://www.google.com/maps/dir/?api=1&destination=${targetLat},${targetLng}`;
            window.open(googleMapsUrl, "_blank");
        });

        mapyCzButton.addEventListener("click", function () {
            const mapyCzUrl = `https://mapy.cz/turisticka?source=coor&id=${targetLng},${targetLat}`;
            window.open(mapyCzUrl, "_blank");
        });
    </script>
</body>

</html>
